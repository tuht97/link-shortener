datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    links         Link[]
    createdAt     DateTime  @default(now())
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Link {
    id        String    @id @default(cuid()) 
    domain    String // domain of the link (e.g. abc.com) 
    key       String // key of the link (e.g. /github)
    url       String    @db.LongText // target url (e.g. https://github.com/abc/xyz) 
    expiresAt DateTime?
    password  String? // password to access the link
    slug    String
    androidTargeting  String?
    iOSTargeting  String?

    title       String? // OG title for the link (e.g. ABC Title)
    description String? @db.VarChar(280) // OG description for the link (e.g. An open-source link management tool for modern marketing teams to create, share, and track short links.)
    image       String? @db.LongText // OG image for the link (e.g. https://abc.xyz/og-image.png)

    // User who created the link
    user   User?   @relation(fields: [userId], references: [id])
    userId String?

    clicks      Int       @default(0) // number of clicks
    lastClicked DateTime? // when the link was last clicked

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([slug])
    @@index(domain)
    @@index(password)
    @@index(createdAt(sort: Desc))
    @@index(clicks(sort: Desc))
    @@index(lastClicked)
    @@index(userId)
    @@fulltext([url])
    @@fulltext([key, url])
}
